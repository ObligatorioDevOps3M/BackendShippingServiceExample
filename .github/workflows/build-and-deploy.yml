# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD Workflow

on:
  ##Revisar que dispara build y deploy en push aveces
  push:
    branches: [ "main" , "staging" , "develop" ]
  pull_request:
    branches: [ "main" , "staging" , "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK Corretto 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'corretto'
        cache: maven

  # Build con Maven
    - name: Build and Test with Maven
      run: mvn -B package --file pom.xml

  # Credenciales de AWS
    #Parametrizar:
        ## -AWS Region en secrets de GitHub?
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1 # Cambia a tu regi√≥n
  
  #Build y push de la imagen de Docker a AWS ECR
  ##Parametrizar:
      ## --REPOSITORY_URI
      ## --IMAGE_TAG
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
    # env:
    #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #    IMAGE_TAG: ${{ github.sha }}
      run: |
        IMAGE_TAG=latest
        REPOSITORY_URI=140598534703.dkr.ecr.us-east-1.amazonaws.com/ecr_obligatorio_develop/shipping 
        docker build . --file Dockerfile --tag 140598534703.dkr.ecr.us-east-1.amazonaws.com/ecr_obligatorio_develop/shipping:latest
        docker push 140598534703.dkr.ecr.us-east-1.amazonaws.com/ecr_obligatorio_develop/shipping:latest
   
  # Deploy de la aplicacion en AWS EKS
  ## Parametrizar:
      ## --name cluster
      ## --archivos deployment.yaml y service.yaml en DevOps?
    - name: Deploy Application to EKS
      run: |
        aws eks --region us-east-1 update-kubeconfig --name cluster_obligatorio
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml


