# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD Workflow

on:
  push:
    branches: [ "main" , "staging" , "develop" ]
  pull_request:
    branches: [ "main" , "staging" , "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK Corretto 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'corretto'
        cache: maven
    
    # Build con maven
    - name: Build and Test with Maven
      run: mvn -B package --file pom.xml

    #Build y push de la imagen de Docker a AWS ECR
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    #- name: Build and push Docker image
    #  run: |
    #    IMAGE_TAG=latest
    #    REPOSITORY_URI=your-ecr-repo-uri
    #    docker build -t $REPOSITORY_URI:$IMAGE_TAG .
    #    docker push $REPOSITORY_URI:$IMAGE_TAG

    - name: Build and push Docker image
      run: |
        IMAGE_TAG=latest
        REPOSITORY_URI=your-ecr-repo-uri
        docker build . --file Dockerfile --tag shipping-service-example:$(date +%s)
        docker push $REPOSITORY_URI:$IMAGE_TAG
  
  # Credenciales de AWS
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 # Cambia a tu región
  
  # Deploy de IaC con Terraform
    - name: Deploy Infrastructure with Terraform
      run: |
        terraform init
        terraform apply -auto-approve
      working-directory: infra/terraform # Cambia al directorio donde están tus archivos de Terraform
   
  # Deploy de la aplicacion en AWS EKS
    - name: Deploy Application to EKS
      run: |
        aws eks --region us-east-1 update-kubeconfig --name <cluster-name>
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
    
    # - name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag shipping-service-example:$(date +%s)
    # Not needed for this project
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6